import * as React from 'react'
import { PropertyControls, ControlType } from 'framer'
import styled from 'styled-components'

const Wrap = styled.div``
const Video = styled.video`
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: '50% 50%';
`

enum SrcType {
  Video = 'Video',
  Url = 'URL',
}

// Define type of property
interface Props {
  width: number
  height: number
  srcType: SrcType
  video: string
  url: string
  playerState: string
  autoplay: boolean
  controls: boolean
  loop: boolean
  muted: boolean
}

export class HTML_Video extends React.Component<Props> {
  // Set default properties
  static defaultProps = {
    srcType: SrcType.Url,
    url: 'https://www.w3schools.com/html/mov_bbb.mp4',
    video: '',
    width: 375,
    height: 206,
    autoplay: false,
    controls: false,
    loop: true,
    muted: true,
  }

  // Items shown in property panel
  static propertyControls: PropertyControls = {
    srcType: {
      type: ControlType.SegmentedEnum,
      title: 'Source',
      options: [SrcType.Url, SrcType.Video],
    },
    url: {
      type: ControlType.String,
      title: ' ',
      placeholder: '.../example.mp4',
      hidden(props) {
        return props.srcType === SrcType.Video
      },
    },
    video: {
      type: ControlType.File,
      title: ' ',
      allowedFileTypes: ['mp4'],
      hidden(props) {
        return props.srcType === SrcType.Url
      },
    },
    autoplay: { type: ControlType.Boolean, title: 'autoplay' },
    controls: { type: ControlType.Boolean, title: 'controls' },
    loop: { type: ControlType.Boolean, title: 'loop' },
    muted: { type: ControlType.Boolean, title: 'muted' },
  }

  play(myVideo) {
    myVideo.play()
  }
  pause(myVideo) {
    myVideo.pause()
  }
  stop(myVideo) {
    myVideo.load()
  }

  componentWillReceiveProps(nextProps) {
    if (this.props.playerState != nextProps.playerState) {
      var myVideo = document.getElementById('video1')
      switch (nextProps.playerState) {
        case 'play':
          this.play(myVideo)
          break
        case 'pause':
          this.pause(myVideo)
          break
        case 'stop':
          this.stop(myVideo)
          break

        default:
          break
      }
    }
  }

  render() {
    const {
      width,
      height,
      autoplay,
      controls,
      loop,
      muted,
      srcType,
      url,
      video,
    } = this.props
    return (
      <Wrap
        style={{
          width: width,
          height: height,
        }}
      >
        <Video
          id="video1"
          autoplay={autoplay}
          controls={controls}
          loop={loop}
          muted={muted}
        >
          <source src={srcType === SrcType.Url ? url : video} />
        </Video>
      </Wrap>
    )
  }
}
