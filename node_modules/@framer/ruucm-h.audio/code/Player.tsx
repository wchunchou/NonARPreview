import * as React from 'react'
import { useEffect } from 'react'
import { Frame, useCycle, addPropertyControls, ControlType } from 'framer'

export function Player({
  width,
  height,
  src,
  autoplay,
  loop,
  muted,
  controls,
  playerState,
  currentTime,
  ...props
}) {
  let audioRef = null

  useEffect(() => {
    log('new playerState', playerState)
    if (playerState == 'play') {
      audioRef.play()
    } else if (playerState == 'pause') {
      audioRef.pause()
    } else if (playerState == 'stop') {
      //   myAudio.stop()
    }
  }, [playerState])

  return (
    <div
      style={{
        width: width,
        height: height,
        overflow: 'hidden',
        backgroundColor: 'rgba(255, 255, 255, 0)',
        color: 'rgba(255, 255, 255, 0)',
        fontSize: '14px',
      }}
    >
      <audio
        ref={el => (audioRef = el)}
        key={`#${autoplay}`}
        autoPlay={autoplay}
        loop={loop}
        muted={muted}
        controls={controls}
        preload="auto"
        style={{
          width: '100%',
          height: '100%',
          objectPosition: '50% 50%',
        }}
        src={src + '#t=' + currentTime}
      />
      Your browser does not support HTML5 audio.
    </div>
  )
}

Player.defaultProps = {
  width: 320,
  height: 40,
  src:
    'https://946663360620-us-east-1-static-files.s3.amazonaws.com/audio-snippets/store.mp3',
  autoplay: false,
  loop: false,
  muted: false,
  controls: true,
  playerState: 'stop',
  currentTime: 0,
}

addPropertyControls(Player, {
  src: {
    type: ControlType.File,
    allowedFileTypes: ['mp3'],
  },
  autoplay: { type: ControlType.Boolean, title: 'Play' },
  loop: { type: ControlType.Boolean, title: 'Loop' },
  muted: { type: ControlType.Boolean, title: 'Muted' },
  controls: { type: ControlType.Boolean, title: 'Show' },
  currentTime: { type: ControlType.Number, title: 'Time' },
})
